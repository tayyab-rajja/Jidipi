import Head from "next/head";
import { FC } from "react";
import { GetServerSideProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";

import Layout from "src/components/Layout";

import UserPanelData from "src/components/UserPanelData/UserPanelData";
import PanelTable from "src/components/PanelTable/PanelTable";
import SidebarWithAvatar from "src/components/SidebarWithAvatar/SidebarWithAvatar";

import { fetchPageFolders } from "src/api/fetchPageFolders";
import { useFavoratePosts } from "src/api/useFavoratePosts";

import { getTableData } from "helpers/getTableData";
import { PageFolder } from "types/pageFolderType";
import LoginSidebar from "src/components/LoginSidebar/LoginSidebar";

interface TablePageProps {
  tabs: PageFolder[];
  pageFolders: PageFolder[];
}

const TablePage: FC<TablePageProps> = ({ pageFolders, tabs }) => {
  const { data } = useFavoratePosts();
  const tableData = getTableData(data?.readerPost, "POSTS");

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout
        SidebarComponent={<SidebarWithAvatar />}
        pageFolders={pageFolders}
      >
        <LoginSidebar />

        <div style={{ maxWidth: "1200px", margin: "0 auto" }}>
          <UserPanelData />
          <PanelTable tabs={tabs} tableData={tableData} />
        </div>
      </Layout>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ locale }) => {
  let pageFolders: PageFolder[] = [];
  let tabs = [];

  try {
    pageFolders = await fetchPageFolders();
  } catch (e) {
    console.log(e);
  }

  tabs = pageFolders.filter(
    ({ pageType }) => pageType === "PRODUCT" || pageType === "PROJECT"
  );

  return {
    props: {
      ...(await serverSideTranslations(locale as string, ["common"])),
      tabs,
      pageFolders,
    },
  };
};

export default TablePage;
